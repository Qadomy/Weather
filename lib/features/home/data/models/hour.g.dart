// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'hour.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Hour _$HourFromJson(Map<String, dynamic> json) => Hour(
      timeEpoch: (json['timeEpoch'] as num?)?.toDouble(),
      time: json['time'] as String?,
      tempC: (json['tempC'] as num?)?.toDouble(),
      tempF: (json['tempF'] as num?)?.toDouble(),
      isDay: (json['isDay'] as num?)?.toDouble(),
      condition: json['condition'] == null
          ? null
          : Condition.fromJson(json['condition'] as Map<String, dynamic>),
      windMph: (json['windMph'] as num?)?.toDouble(),
      windKph: (json['windKph'] as num?)?.toDouble(),
      windDegree: (json['windDegree'] as num?)?.toDouble(),
      windDir: json['windDir'] as String?,
      pressureMb: (json['pressureMb'] as num?)?.toDouble(),
      pressureIn: (json['pressureIn'] as num?)?.toDouble(),
      precipMm: (json['precipMm'] as num?)?.toDouble(),
      precipIn: (json['precipIn'] as num?)?.toDouble(),
      snowCm: (json['snowCm'] as num?)?.toDouble(),
      humidity: (json['humidity'] as num?)?.toDouble(),
      cloud: (json['cloud'] as num?)?.toDouble(),
      feelslikeC: (json['feelslikeC'] as num?)?.toDouble(),
      feelslikeF: (json['feelslikeF'] as num?)?.toDouble(),
      windchillC: (json['windchillC'] as num?)?.toDouble(),
      windchillF: (json['windchillF'] as num?)?.toDouble(),
      heatindexC: (json['heatindexC'] as num?)?.toDouble(),
      heatindexF: (json['heatindexF'] as num?)?.toDouble(),
      dewpointC: (json['dewpointC'] as num?)?.toDouble(),
      dewpointF: (json['dewpointF'] as num?)?.toDouble(),
      willItRain: (json['willItRain'] as num?)?.toDouble(),
      chanceOfRain: (json['chanceOfRain'] as num?)?.toDouble(),
      willItSnow: (json['willItSnow'] as num?)?.toDouble(),
      chanceOfSnow: (json['chanceOfSnow'] as num?)?.toDouble(),
      visKm: (json['visKm'] as num?)?.toDouble(),
      visMiles: (json['visMiles'] as num?)?.toDouble(),
      gustMph: (json['gustMph'] as num?)?.toDouble(),
      gustKph: (json['gustKph'] as num?)?.toDouble(),
      uv: (json['uv'] as num?)?.toDouble(),
      shortRad: (json['shortRad'] as num?)?.toDouble(),
      diffRad: (json['diffRad'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$HourToJson(Hour instance) => <String, dynamic>{
      'timeEpoch': instance.timeEpoch,
      'time': instance.time,
      'tempC': instance.tempC,
      'tempF': instance.tempF,
      'isDay': instance.isDay,
      'condition': instance.condition,
      'windMph': instance.windMph,
      'windKph': instance.windKph,
      'windDegree': instance.windDegree,
      'windDir': instance.windDir,
      'pressureMb': instance.pressureMb,
      'pressureIn': instance.pressureIn,
      'precipMm': instance.precipMm,
      'precipIn': instance.precipIn,
      'snowCm': instance.snowCm,
      'humidity': instance.humidity,
      'cloud': instance.cloud,
      'feelslikeC': instance.feelslikeC,
      'feelslikeF': instance.feelslikeF,
      'windchillC': instance.windchillC,
      'windchillF': instance.windchillF,
      'heatindexC': instance.heatindexC,
      'heatindexF': instance.heatindexF,
      'dewpointC': instance.dewpointC,
      'dewpointF': instance.dewpointF,
      'willItRain': instance.willItRain,
      'chanceOfRain': instance.chanceOfRain,
      'willItSnow': instance.willItSnow,
      'chanceOfSnow': instance.chanceOfSnow,
      'visKm': instance.visKm,
      'visMiles': instance.visMiles,
      'gustMph': instance.gustMph,
      'gustKph': instance.gustKph,
      'uv': instance.uv,
      'shortRad': instance.shortRad,
      'diffRad': instance.diffRad,
    };
